Parse patent grant and assignment info from USPTO and match with compustat data.

+===============================================================================+
| File descriptions                                                             |
+===============================================================================+

  analyze_comp.py: analyze compustat data
  analyze_lags.py: analyze lags between filing and reassignment
  compustat_match.py: match names from patent assignments to compustat names into transfers.db
  compustat_merge.py: merge matched assignment data into compustat.db
  dump_assign_csv.py: write patent assignment data to csv
  dump_assign_npy.py: write patent assignment data to npy
  dump_grants_csv.py: write patent grant data to csv
  dump_grants_npy.py: write patent grant data to npy
  dump_trans_npy.py: write compustat+transfer data to npy
  find_assign_dups.py: find assignments between the same entity (old)
  gen_tables.py: clean patent data and merge grant/assignment data
  parse_assign_all.py: parse all patent assignment data into patents.db
  parse_assign_sax.py: parse sax patent assignment data into patents.db
  parse_firms.py: parse compustat firm data into compustat.db and generate keys
  parse_nber_keys.py: take pdpcohdr.tsv and generate keywords matched to pdpco
  parse_grants_all.py: parse all patent grant data (gen1,gen2,gen3) into patents.db
  parse_grants_gen1.py: parse gen1 patent grant data into patents.db
  parse_grants_gen2.py: parse gen2 patent grant data into patents.db
  parse_grants_gen3.py: parse gen3 patent grant data into patents.db
  standardize.py: name standardization routines

+===============================================================================+
| Workflow                                                                      |
+===============================================================================+

  fetch patent grant files: grant_files/fetch_grants.py
  fix malformed XML in grant files: grant_files/fix_grants_gen2.py and grant_files/fix_grants_gen3.py
  fetch patent assignment files: assign_files/fetch_assignments.py
  patent grants parse: parse_grants_all.py
  patent assignments parse: parse_assign_all.py
  merge grants/assignments: fix_patent_tables.py
  flag redundant assignments: flag_assign_dups.py
  compustat parse: parse_compustat.py
  match compustat with assignments: compustat_assign_match.py
  match compustat with grants: compustat_grant_match.py
  merge compustat data with assign: compustat_merge.py
  write compustat data to npy: dump_comp_npy.py

+===============================================================================+
| Database layout                                                               |
+===============================================================================+

  patents.db:
    patent: (patnum int, filedate text, grantdate text, classone int, classtwo int, owner text)
    assignment: (patnum int, execdate text, recdate text, conveyance text, assignor text, assignee text)
  
  compustat.db:
    firmyear: (gvkey int, year int, income real, revenue real, rnd real) + (source_pnum int, dest_pnum int)
    firmname: (gvkey int, name text)
    firmkey: (gvkey int, idx int, keyword text, ntoks int)

  transfers.db:
    transfer: (patnum int, execyear int, assignor_gvkey int, assignee_gvkey int)

+===============================================================================+
| Data sources                                                                  |
+===============================================================================+

  assignment_files: patent reassignment data from Google/USPTO
  grant_files: patent grant data from Google/USPTO
  compustat_files: Compustat data since 1950 from WRDS
  other_files:
    naics_co09.csv: concordance between US Patent Classes (USPC) and NAICS codes
    sic_co08.csv: concordance between USPC and SIC codes

